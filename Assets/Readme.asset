%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: fcf7219bab7fe46a1ad266029b2fee19, type: 3}
  m_Name: Readme
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: 38b1df1cce7621c4ebabc032ed6ba0f2, type: 3}
  title: Screen Space Vision Cones
  sections:
  - heading: Vision Cone Demo
    text: Move your mouse around and don't get seen!
    linkText: 
    url: 
  - heading: 
    text: 'In this project I''ve put together a basic vision cone renderer. On the
      gameplay side I test to see if our target is in view via raycasts and some
      simple range and field of view tests. On the GPU side I render a depth pass
      to mask where we can and cannot see. Finally we composite the vision cones
      in screen space for the final result. '
    linkText: 
    url: 
  - heading: 
    text: The vision cone data is passed from the VisionConeComponent to the VisionConeRenderPassFeature
      via the VisionConeManager object.
    linkText: 
    url: 
  - heading: 
    text: 'The VisionConeRenderPassFeature contains two passes- one that renders
      a tiled depth pass from each of the maximum possible vision casters (16). A
      second pass blits these to the screen using an override shader. '
    linkText: 
    url: 
  - heading: 
    text: 'To see the vision cones in action, open VisionConeScene and press play. '
    linkText: 
    url: 
  - heading: 
    text: 'Please see Assets/Resources/Shaders/ScreenSpaceVisionConeAdditive.hlsl
      for an example of the vision cone shader. '
    linkText: 
    url: 
  - heading: Pete Hanshaw
    text: 
    linkText: 
    url: 
  loadedLayout: 1
